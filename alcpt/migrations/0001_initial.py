# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-12-11 06:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.SmallIntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finish_time', models.DateTimeField(auto_now_add=True)),
                ('is_finished', models.BooleanField(default=False)),
                ('score', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_content', models.CharField(max_length=255)),
                ('is_answer', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('exam_type', models.PositiveSmallIntegerField(default=2)),
                ('use_freq', models.IntegerField(default=0)),
                ('modified_times', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('duration', models.PositiveSmallIntegerField(default=-1)),
                ('finish_time', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Proclamation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=255)),
                ('text', models.TextField(max_length=512)),
                ('is_public', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q_type', models.PositiveSmallIntegerField()),
                ('q_file', models.TextField(blank=True, null=True)),
                ('q_content', models.TextField(blank=True, null=True)),
                ('difficulty', models.PositiveSmallIntegerField(default=0)),
                ('issued_freq', models.IntegerField(default=0)),
                ('correct_freq', models.IntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_valid', models.BooleanField(default=False)),
                ('state', models.SmallIntegerField(choices=[(0, '暫存'), (1, '審核通過'), (2, '審核未通過'), (3, '等待審核'), (4, '被回報錯誤'), (5, '被回報錯誤，已處理')], default=0)),
            ],
            options={
                'ordering': ('-q_content',),
            },
        ),
        migrations.CreateModel(
            name='Squadron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_id', models.CharField(max_length=10, unique=True)),
                ('grade', models.PositiveSmallIntegerField(default=108)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='alcpt.Department')),
                ('squadron', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='alcpt.Squadron')),
            ],
        ),
        migrations.CreateModel(
            name='TestPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('is_testpaper', models.BooleanField(default=0)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('valid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('reg_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('privilege', models.PositiveSmallIntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='testpaper',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='testee_created', to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='question',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='question_created', to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='question',
            name='last_updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_updated', to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='question',
            name='used_to',
            field=models.ManyToManyField(to='alcpt.TestPaper'),
        ),
        migrations.AddField(
            model_name='proclamation',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proclamation_created', to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='group',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='group_created', to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='group',
            name='member',
            field=models.ManyToManyField(blank=True, to='alcpt.Student'),
        ),
        migrations.AddField(
            model_name='exam',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_created', to='alcpt.User'),
        ),
        migrations.AddField(
            model_name='exam',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alcpt.Group'),
        ),
        migrations.AddField(
            model_name='exam',
            name='testpaper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='alcpt.TestPaper'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alcpt.Question'),
        ),
        migrations.AddField(
            model_name='answersheet',
            name='exam',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='alcpt.Exam'),
        ),
        migrations.AddField(
            model_name='answersheet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alcpt.Student'),
        ),
        migrations.AddField(
            model_name='answer',
            name='answer_sheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alcpt.AnswerSheet'),
        ),
        migrations.AddField(
            model_name='answer',
            name='option_list',
            field=models.ManyToManyField(to='alcpt.Choice'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alcpt.Question'),
        ),
    ]
